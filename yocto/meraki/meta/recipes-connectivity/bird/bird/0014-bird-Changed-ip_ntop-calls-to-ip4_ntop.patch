diff --git a/proto/meraki/meraki.c b/proto/meraki/meraki.c
index 838cb172..16758cfc 100644
--- a/proto/meraki/meraki.c
+++ b/proto/meraki/meraki.c
@@ -15,6 +15,7 @@
 #include "nest/cli.h"
 #include "conf/conf.h"
 #include "filter/filter.h"
+#include "lib/ip.h"
 #include "lib/string.h"
 
 #include "meraki.h"
@@ -47,7 +48,11 @@ meraki_notify(struct proto *P, rtable *src_table, net *n, rte *new, rte *old, ea
                //route is not "primary", ie it should not forward traffic
                continue;
            }
-           ip_ntop(n->n.prefix, ip_buf);
+#ifdef IPV6
+           ip6_ntop(n->n.prefix, ip_buf);
+#else
+           ip4_ntop(n->n.prefix, ip_buf);
+#endif
            if (sscanf(e->attrs->src->proto->name, "peer%u", &peer_num) > 0) {
                if (0 > fprintf(out,
                            "route%u:subnet %s/%2d\n"
diff --git a/sysdep/click/krt.c b/sysdep/click/krt.c
index fa795560..2169396e 100644
--- a/sysdep/click/krt.c
+++ b/sysdep/click/krt.c
@@ -29,7 +29,6 @@
 #include "conf/conf.h"
 #include "lib/eventlog.h"
 #include "lib/string.h"
-#include "lib/ip.h"
 
 #include "unix.h"
 #include "krt.h"
@@ -224,9 +223,13 @@ write_route_to_click(const struct proto *p,
     char gateway_str[STD_ADDRESS_P_LENGTH+1];
 
     net *net = route_info->net;
-    ip_ntop(net->n.prefix, prefix_str);
-    ip_ntop(route_info->gateway, gateway_str);
-
+#ifdef IPV6
+    ip4_ntop(net->n.prefix, prefix_str);
+    ip4_ntop(route_info->gateway, gateway_str);
+#else
+    ip4_ntop(net->n.prefix, prefix_str);
+    ip4_ntop(route_info->gateway, gateway_str);
+#endif
     /* Determine whether we're trying to add or remove a route */
     struct krt_config* const config = (struct krt_config *)p->cf;
     switch (action) {
-- 
2.22.0

